name: Model Evaluation and Sanity Test

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  GCP_PROJECT_ID: premium-cipher-462011-p3
  ARTIFACT_REGISTRY: us-central1-docker.pkg.dev
  MODEL_BUCKET_URI: gs://mlops-course-premium-cipher-462011-p3-unique/my-models/iris-classifier-week-1/model.joblib


jobs:
  test_model:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - uses: iterative/setup-cml@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install scikit-learn pandas pytest google-cloud-storage

      - name: Create GCP credentials file
        run: |
          echo "Setting up GCP credentials..."
          echo '${{ secrets.GCP_SA_KEY }}' > gcp-key.json
          echo "Credentials written to gcp-key.json"

      - name: Authenticate with Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=gcp-key.json
          echo "Authenticated with GCP"

      - name: Download model artifact from GCS
        run: |
          echo "Downloading model from GCS..."
          gcloud storage cp "${{ env.MODEL_BUCKET_URI }}" ./app/model.joblib
          echo "Model downloaded successfully"

      - name: Run training
        run: |
          python train.py

      - name: Run evaluation
        run: |
          python evaluate.py

      - name: Generate model performance metrics
        run: |
          source .venv/bin/activate
          python src/plot_metrics.py
          echo "## Model Performance Metrics" >> report.md
          echo "![Model Metrics](./metrics.png)" >> report.md
          echo "" >> report.md

      - name: Run tests and save report
        run: |
          echo "## Test Results" >> report.md
          pytest --tb=short --disable-warnings >> report.md 2>&1 || echo "Tests failed" >> report.md
          echo "Tests completed on $(date)" >> report.md


      - name: Post CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml comment create report.md
